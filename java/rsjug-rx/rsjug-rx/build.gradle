/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'toff' at '23/07/16 18:59' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'spring-boot'

buildscript {
	// In this section you declare where to find the dependencies of your project
	repositories {
	    // Use 'jcenter' for resolving your dependencies.
	    // You can declare any Maven/Ivy/file repository here.
	    jcenter()
	    mavenCentral()
	}
	dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.6.RELEASE")
    }
}

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}
	
sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'io.reactivex:rxjava:1.1.8'
	compile 'com.h2database:h2:1.4.192'
	compile "org.springframework:spring-jdbc"
    compile "org.springframework.boot:spring-boot-starter"
	compile "com.fasterxml.jackson.core:jackson-databind"
    compile 'org.apache.httpcomponents:httpasyncclient:4.1.2'
	compile "io.reactivex:rxnetty:0.4.18"
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
